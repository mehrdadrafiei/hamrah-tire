# Generated by Django 5.1.4 on 2024-12-26 08:52

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Tire',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('serial_number', models.CharField(max_length=50, unique=True)),
                ('model', models.CharField(max_length=100)),
                ('size', models.CharField(max_length=50)),
                ('manufacturer', models.CharField(max_length=100)),
                ('purchase_date', models.DateField()),
                ('status', models.CharField(choices=[('ORDERED', 'Ordered'), ('CURRENCY_ALLOCATION', 'Currency Allocation'), ('CUSTOMS_CLEARANCE', 'Customs Clearance'), ('WAREHOUSING', 'In Warehouse'), ('DELIVERED', 'Delivered to Customer'), ('IN_USE', 'In Use'), ('IN_REPAIR', 'In Repair'), ('DISPOSED', 'Disposed')], max_length=20)),
                ('working_hours', models.IntegerField(default=0)),
                ('tread_depth', models.FloatField(validators=[django.core.validators.MinValueValidator(0)])),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='owned_tires', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'tires',
            },
        ),
        migrations.CreateModel(
            name='TechnicalReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inspection_date', models.DateTimeField()),
                ('tread_depth', models.FloatField(validators=[django.core.validators.MinValueValidator(0)])),
                ('working_hours', models.IntegerField()),
                ('condition_rating', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('notes', models.TextField()),
                ('requires_immediate_attention', models.BooleanField(default=False)),
                ('expert', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('tire', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tire.tire')),
            ],
            options={
                'db_table': 'technical_reports',
            },
        ),
        migrations.CreateModel(
            name='RepairRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('request_date', models.DateTimeField(auto_now_add=True)),
                ('description', models.TextField()),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('APPROVED', 'Approved'), ('IN_PROGRESS', 'In Progress'), ('COMPLETED', 'Completed'), ('REJECTED', 'Rejected')], max_length=20)),
                ('completion_date', models.DateTimeField(blank=True, null=True)),
                ('approved_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_repairs', to=settings.AUTH_USER_MODEL)),
                ('requested_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('tire', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tire.tire')),
            ],
            options={
                'db_table': 'repair_requests',
            },
        ),
        migrations.CreateModel(
            name='Alert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alert_type', models.CharField(choices=[('WORKING_HOURS', 'Working Hours Exceeded'), ('TREAD_DEPTH', 'Low Tread Depth'), ('WARRANTY_EXPIRY', 'Warranty Near Expiration')], max_length=20)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('resolved_date', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('resolved_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('tire', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tire.tire')),
            ],
            options={
                'db_table': 'alerts',
            },
        ),
        migrations.CreateModel(
            name='TireSize',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('width', models.IntegerField()),
                ('aspect_ratio', models.IntegerField()),
                ('diameter', models.IntegerField()),
                ('standard_description', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'tire_sizes',
                'unique_together': {('width', 'aspect_ratio', 'diameter')},
            },
        ),
        migrations.CreateModel(
            name='Training',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('video_url', models.URLField()),
                ('upload_date', models.DateTimeField(auto_now_add=True)),
                ('uploaded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'trainings',
            },
        ),
        migrations.CreateModel(
            name='TrainingRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('request_date', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('APPROVED', 'Approved'), ('REJECTED', 'Rejected'), ('COMPLETED', 'Completed')], max_length=20)),
                ('completion_date', models.DateTimeField(blank=True, null=True)),
                ('approved_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_training_requests', to=settings.AUTH_USER_MODEL)),
                ('requested_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('training', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tire.training')),
            ],
            options={
                'db_table': 'training_requests',
            },
        ),
        migrations.CreateModel(
            name='Warranty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('is_active', models.BooleanField(default=False)),
                ('activation_date', models.DateField(blank=True, null=True)),
                ('approved_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_warranties', to=settings.AUTH_USER_MODEL)),
                ('tire', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='tire.tire')),
            ],
            options={
                'db_table': 'warranties',
            },
        ),
    ]
